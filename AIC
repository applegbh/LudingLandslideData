import geopandas as gpd
import pandas as pd
import numpy as np
from pygam import LinearGAM, s
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.svm import SVR
def AIC(y_real, y_pred, k, n):

    '''Calculating the Akaike Information Criterion (AIC)
    :param y_real: actual value
    :param y_pred: predicted value
    :param k: number of free parameters (number of features)
    :param n: number of samples
    :return: AIC value
    '''
    resid = y_real - y_pred
    SSR = sum(resid ** 2)
    AICValue = 2 * k + n * np.log(float(SSR) / n)
    return AICValue

gdf = gpd.read_file(r'E:\LuDdata\Landslide Size File\Vel_result\Su_with_AllFactor_Merge_newSUVel.shp')  

columns = gdf.columns.tolist()
factors = columns[3:-1]  

X = gdf[factors].values  
y = gdf['Area_SUM'].values  
y_log = np.log1p(y) 


selected_features = []
selected_columns = []
unselected_factors = [] 

for i, factor in enumerate(factors):
    X_single = X[:, i].reshape(-1, 1)
    mod_gam = LinearGAM().fit(X_single, y_log)
    y_pred = mod_gam.predict(X_single)
    #  AIC
    k = 1  # 
    n = len(y_log)
    aic_value = AIC(y_log, y_pred, k, n)


    if aic_value < 1000:
        selected_features.append(X_single)
        selected_columns.append(factor)
        print(f"FACTOR {factor} AIC Value：{aic_value:.2f}（selected）")
    else:
        unselected_factors.append((factor, aic_value))
        print(f"FACTOR {factor} AIC Value：{aic_value:.2f}")

print("Factor for AIC < 1000：", selected_columns)


unselected_df = pd.DataFrame(unselected_factors, columns=['factor', 'AIC'])
# unselected_df.to_csv(r'E:\LuDdata\Landslide Size File\SUAIC_greater_than_1000_factors-all1.csv', index=False, encoding='utf-8')

print("Factors with AIC >= 1000 and their AIC values have been saved to the  'AIC_greater_than_1000_factors-rf.csv'")
